embedding:
  model_name: intfloat/multilingual-e5-large-instruct
  chunk_size: 170 #85 #null
  max_chunks: 20 #10
  chunk_batch_size: 32
  paper_batch_size: 1000 #256//20
  n_jobs: 40

qdrant:
  docker_timeout: 30.0
  watch_tmp_timeout: 60.0
  max_threads: 5
  port: 6333
  host: localhost

reranking:
  nhead: 4
  num_layers: 2
  dropout: 0.1
  max_len: 128
  temperature: 0.01
  cite_deltaMonths: 0
  topK_near_cite_range: [0, 50]
  years_cite_range: [2024, 2025]
  training_epochs: 10
  test_size: 0.2
  learning_rate: 0.0001
  
ollama:
  model_name: 'gemma3:12b' #'mistral-small:24b' #'deepseek-r1:32b' #'gemma2:27b' #'deepseek-r1:14b' #
  port: 11434
  host: localhost
  docker_timeout: 30.0
  watch_tmp_timeout: 60.0
  max_threads: 5
  expand_instruct: >
            You are a helpful assistant that expand queries sent by users to retrieve relevant scientific articles.\n
            Expand the following search query by rephrasing it in a more descriptive and complete sentence, 
            suitable for retrieving relevant scientific documents. Correct any spelling mistake when necessary.
            Do not return anything else than just the expanded query.\n\n
            Here is the original query:\n
  parse_instruct: > 
            You are a helpful assistant that parse queries and only return the requested fields.\n
            Parse the following search query to extract the cleaned query and any metadata it contains.
            Specifically, identify and separate:\n
            - author last names\n
            - Date to start searching from (formatted as %Y-%m-%d even if there's just a year mentioned)\n
            - Date to stop searching at (formatted as %Y-%m-%d even if there's just a year mentioned)\n
            Then reformulate the query without sections specifying authors names or dates.\n
            Return results as a dictionary with cleaned query and fields:\n
            {\"cleaned_query\" \"author_names\", \"start_date\", \"end_date\"}\n\n
            If you can't find answers for any of these fields just fill it with 'null'.\n
            Here is the original query:\n

search:
  hash_len: 20
  topk_rerank: 10
  ntopk_qdrant: 5
  topk_per_article: 1
  timeout: 15.0
  use_query_cache: false

chat:
  hash_len: 20
  allowed_origins:
    - http://localhost:5173
    - https://goose-beloved-kit.ngrok-free.app #frontend tunnel

  synth_instruct: >
            You are a helpful academic assistant.\n
            Answer the following question using the articles provided as context.\n
            If you can't find the answer, do not pretend you know it, but answer "I don't know".\n
            Question: <QUERY> \n
            Context:\n
            <REFS>
  instruct_parse: > 
            You are a helpful assistant that parse queries and only return the requested fields.\n
            Parse the following search query to extract the cleaned query and any metadata it contains.
            Specifically, identify and separate:\n
            - author last names\n
            - Date to start searching from (formatted as %Y-%m-%d even if there's just a year mentioned)\n
            - Date to stop searching at (formatted as %Y-%m-%d even if there's just a year mentioned)\n
            Then reformulate the query without sections specifying authors names or dates.\n
            Return results as a dictionary with cleaned query and fields:\n
            {\"cleaned_query\" \"author_names\", \"start_date\", \"end_date\"}\n\n
            If you can't find answers for any of these fields just fill it with 'null'.\n
            Here is the original query:\n
  instruct_init: >
            \nImportant instructions:\n
            * **If you can answer the user's question accurately based on your knowledge and previous messages in the conversation**:\n
              answer it direclty and if you used previous messages, cite your source by including (id) where id are the ARTICLE IDs from the database \n
              but DO NOT include external references. \
            * **If your answer needs to be cross-checked for accuracy**:\n
              Step 1: Define at least three questions that covers different aspects of the user's query./n
              Step 2: Expand each of these questions by rephrasing them in a more descriptive and complete sentence, \n
              suitable for retrieving relevant scientific documents. Make complete sentences not just key words. \n
              Step 3: At the end, return the questions defined at step 2, as: \n
              'SEARCHING: question1 \n\n' 'SEARCHING: question2 \n\n' etc.
  instruct_refine: >
            * Provide an accurate answer to the user's question based on the provided articles and on your knowledge.\n
            * Structure your response in multiple paragraph describing one element of the response.
              Cite your sources by including where appropriate (ARTICLE_ID) where ARTICLE_ID are the hashed ids provided in the context\n
              for each article.\n

download:
  min_citations_per_year: 1
  fields_of_study:
    - Computer Science
    - Biology
  fields_to_return:
    - title
    - citationCount
    - abstract
    - venue
    - authors
    - publicationDate
    - fieldsOfStudy
    - influentialCitationCount
    - openAccessPdf
    - references

pdf:
  n_jobs_download: 20
  n_jobs_extract: 40
  timeout_per_article: 15
  run_headless: True
  max_pages_start: 20
  max_pages_end: null
  extract_ref: False
  timeout_loadpage: 15
  timeout_startdw: 15
  save_pdfs_to: null
  keep_pdfs: false

load:
  n_jobs: 20