services:
  qdrant:
    image: qdrant/qdrant
    container_name: ${QDRANT_HOST}
    ports:
      - "${QDRANT_PORT}:6333"
      - "6334:6334"
    env_file:
      - .env.compose
    volumes:
      - ${QDRANT_VOL_HOST}:/qdrant/storage
    restart: unless-stopped
    networks:
      - asxai-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    restart: unless-stopped
    networks:
      - asxai-net

  ollama:
    image: ollama/ollama
    container_name: ollama
    ports:
      - "11434:11434"  # Expose local API
    volumes:
      - ${OLLAMA_VOL_HOST}:/root/.ollama  # Persist model downloads
    environment:
      - OLLAMA_HOST='0.0.0.0'
      - OLLAMA_FLASH_ATTENTION=1
      - OLLAMA_MAX_LOADED_MODELS=1
      # - OLLAMA_NUM_PARALLEL=16 
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - asxai-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    restart: unless-stopped
    networks:
      - asxai-net

  selenium-hub:
    image: selenium/hub:4.31.0
    container_name: selenium-hub
    profiles: ["update"]
    ports:
      - "4444:4444"
    environment:
      - GRID_MAX_SESSION=${SELENIUM_MAX_SESSION}
      - GRID_BROWSER_TIMEOUT=60
      - GRID_TIMEOUT=60
    networks:
      - asxai-net

  chrome:
    image: selenium/node-chrome:95.0-20250414
    depends_on:
      - selenium-hub
    profiles: ["update"]
    shm_size: 2gb
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_VNC_NO_PASSWORD=1
      - SE_NODE_MAX_SESSIONS=1
    volumes:
      - ${TEMP_ROOT_HOST}/downloads:/home/seluser/Downloads
    networks:
      - asxai-net
    deploy:
      replicas: ${NB_CHROME_NODES} 

  database-update:
    image: justjul/asxai-torch:latest
    container_name: database-update
    profiles: ["update"]
    env_file:
      - .env.compose
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ${CODE_ROOT_HOST}:${CODE_ROOT}
      - ${PROJECT_ROOT_HOST}:${PROJECT_ROOT}
      - ${TEMP_ROOT_HOST}:${TEMP_ROOT}
      - ${KAGGLE_VOL_HOST}:/root/.kaggle:ro
      - ${HOME}/.cache/huggingface:/root/.cache/huggingface
      - ${MODEL_ROOT_HOST}/mlflow_storage:${MODEL_ROOT}/mlflow_storage
    depends_on:
      - qdrant
      - chrome
      - mlflow
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - asxai-net

  search-worker:
    image: justjul/asxai-torch:latest
    container_name: search-worker
    env_file:
      - .env.compose
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ${CODE_ROOT_HOST}:${CODE_ROOT}
      - ${PROJECT_ROOT_HOST}:${PROJECT_ROOT}
      - ${TEMP_ROOT_HOST}:${TEMP_ROOT}
      - ${KAGGLE_VOL_HOST}:/root/.kaggle:ro
      - ${HOME}/.cache/huggingface:/root/.cache/huggingface
      - ${MODEL_ROOT_HOST}/mlflow_storage:${MODEL_ROOT}/mlflow_storage
      - ${USERS_ROOT_HOST}:${USERS_ROOT}
    depends_on:
      - qdrant
      - kafka
      - mlflow
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - asxai-net
    command: python -m asxai.services.search.search_workers

  search-api:
    image: justjul/asxai-api:latest
    container_name: search-api
    env_file:
      - .env.compose
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ${CODE_ROOT_HOST}:${CODE_ROOT}
      - ${USERS_ROOT_HOST}:${USERS_ROOT}
    depends_on:
      - kafka
      - search-worker
    ports:
      - "8100:8000"
    restart: unless-stopped
    networks:
      - asxai-net
    command: python -m asxai.services.search.search_api


  chat-worker:
    image: justjul/asxai-torch:latest
    container_name: chat-worker
    env_file:
      - .env.compose
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ${CODE_ROOT_HOST}:${CODE_ROOT}
      - ${PROJECT_ROOT_HOST}:${PROJECT_ROOT}
      - ${TEMP_ROOT_HOST}:${TEMP_ROOT}
      - ${KAGGLE_VOL_HOST}:/root/.kaggle:ro
      - ${USERS_ROOT_HOST}:${USERS_ROOT}
    depends_on:
      - qdrant
      - kafka
      - search-worker
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    networks:
      - asxai-net
    command: python -m asxai.services.chat.chat_workers

  chat-api:
    image: justjul/asxai-api:latest
    container_name: chat-api
    env_file:
      - .env.compose
    environment:
      - DEV_BYPASS_TOKEN=${DEV_BYPASS_TOKEN}
      - ADMIN_UIDS=${ADMIN_UIDS}
      - PYTHONUNBUFFERED=1
    volumes:
      - ${CODE_ROOT_HOST}:${CODE_ROOT}
      - ${USERS_ROOT_HOST}:${USERS_ROOT}
      - ${GOOGLE_CREDENTIALS_HOST}:${GOOGLE_CREDENTIALS}:ro
    depends_on:
      - kafka
      - chat-worker
    ports:
      - "8000:8000"
    restart: unless-stopped
    networks:
      - asxai-net
    command: python -m asxai.services.chat.chat_api


  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow
    command: >
      mlflow server 
      --host 0.0.0.0 
      --port 5000
    volumes:
      - ${MODEL_ROOT_HOST}/mlflow_storage/mlruns:/mlruns
      - ${MODEL_ROOT_HOST}/mlflow_storage/mlartifacts:/mlartifacts
    ports:
      - "5000:5000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    networks:
      - asxai-net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ${MONITORING_ROOT_HOST}/prometheus:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - "9090:9090"
    networks:
      - asxai-net
    restart: unless-stopped
    depends_on:
      - chat-api
      - search-api

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ${MONITORING_ROOT_HOST}/grafana:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - asxai-net
    restart: unless-stopped
    depends_on:
      - prometheus

  nginx:
    image: nginx:stable
    container_name: nginx
    depends_on:
      - search-api
    ports:
      - "8080:80"
    volumes:
      - ./nginx:/etc/nginx:ro
    restart: unless-stopped
    networks:
      - asxai-net

networks:
  asxai-net:
    driver: bridge


# to start qdrant:
# docker-compose --env-file .env.compose up
#
# to start update service:
# docker-compose --profile on-demand --env-file .env.compose up
# or
# docker-compose run -rm database-service update --years 2024 2025